"use strict";(self.webpackChunkcomplianz_gdpr=self.webpackChunkcomplianz_gdpr||[]).push([[5671],{85671:function(t,e,c){c.r(e);var s=c(30270),i=c(12902),n=c(48399);const r=(0,s.Ue)(((t,e)=>({integrationsLoaded:!1,fetching:!1,services:[],plugins:[],scripts:[],placeholders:[],blockedScripts:[],setScript:(e,c)=>{t((0,i.ZP)((t=>{if("block_script"===c){let c=t.blockedScripts;if(e.urls){for(const[t,s]of Object.entries(e.urls)){if(!s||0===s.length)continue;let t=!1;for(const[e,i]of Object.entries(c))s===e&&(t=!0);t||(c[s]=s)}t.blockedScripts=c}}const s=t.scripts[c].findIndex((t=>t.id===e.id));-1!==s&&(t.scripts[c][s]=e)})))},fetchIntegrationsData:async()=>{if(e().fetching)return;t({fetching:!0});const{services:c,plugins:s,scripts:i,placeholders:n,blocked_scripts:r}=await o();let d=i;d.block_script&&d.block_script.length>0&&d.block_script.forEach(((t,e)=>{t.id=e})),d.add_script&&d.add_script.length>0&&d.add_script.forEach(((t,e)=>{t.id=e})),d.whitelist_script&&d.whitelist_script.length>0&&d.whitelist_script.forEach(((t,e)=>{t.id=e})),t((()=>({integrationsLoaded:!0,services:c,plugins:s,scripts:d,fetching:!1,placeholders:n,blockedScripts:r})))},addScript:c=>{t({fetching:!0}),t((0,i.ZP)((t=>{t.scripts[c].push({name:"general",id:t.scripts[c].length,enable:!0})})));let s=e().scripts;return n.doAction("update_scripts",{scripts:s}).then((e=>(t({fetching:!1}),e))).catch((t=>{console.error(t)}))},saveScript:(c,s)=>{t({fetching:!0}),t((0,i.ZP)((t=>{const e=t.scripts[s].findIndex((t=>t.id===c.id));-1!==e&&(t.scripts[s][e]=c)})));let r=e().scripts;return n.doAction("update_scripts",{scripts:r}).then((e=>(t({fetching:!1}),e))).catch((t=>{console.error(t)}))},deleteScript:(c,s)=>{t({fetching:!0}),t((0,i.ZP)((t=>{const e=t.scripts[s].findIndex((t=>t.id===c.id));-1!==e&&t.scripts[s].splice(e,1)})));let r=e().scripts;return n.doAction("update_scripts",{scripts:r}).then((e=>(t({fetching:!1}),e))).catch((t=>{console.error(t)}))},updatePluginStatus:async(e,c)=>{t({fetching:!0}),t((0,i.ZP)((t=>{const s=t.plugins.findIndex((t=>t.id===e));-1!==s&&(t.plugins[s].enabled=c)})));const s=await n.doAction("update_plugin_status",{plugin:e,enabled:c}).then((t=>t)).catch((t=>{console.error(t)}));return t({fetching:!1}),s},updatePlaceholderStatus:async(e,c,s)=>{t({fetching:!0}),s&&t((0,i.ZP)((t=>{const s=t.plugins.findIndex((t=>t.id===e));-1!==s&&(t.plugins[s].placeholder=c?"enabled":"disabled")})));const r=await n.doAction("update_placeholder_status",{id:e,enabled:c}).then((t=>t)).catch((t=>{console.error(t)}));return t({fetching:!1}),r}})));e.default=r;const o=()=>n.doAction("get_integrations_data",{}).then((t=>t)).catch((t=>{console.error(t)}))}}]);